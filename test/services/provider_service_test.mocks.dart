// Mocks generated by Mockito 5.4.4 from annotations
// in premixer/test/services/provider_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:premixer/models/preset_model.dart' as _i7;
import 'package:premixer/models/recipe_model.dart' as _i4;
import 'package:premixer/models/source_model.dart' as _i3;
import 'package:premixer/services/database_service.dart' as _i5;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSourceModel_1 extends _i1.SmartFake implements _i3.SourceModel {
  _FakeSourceModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRecipeModel_2 extends _i1.SmartFake implements _i4.RecipeModel {
  _FakeRecipeModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i5.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i6.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i6.Future<_i2.Database>);

  @override
  _i6.Future<int> insertSource(_i3.SourceModel? source) => (super.noSuchMethod(
        Invocation.method(
          #insertSource,
          [source],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> insertRecipe(_i4.RecipeModel? recipe) => (super.noSuchMethod(
        Invocation.method(
          #insertRecipe,
          [recipe],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> insertPreset(_i7.PresetModel? preset) => (super.noSuchMethod(
        Invocation.method(
          #insertPreset,
          [preset],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<List<_i3.SourceModel>> getSources() => (super.noSuchMethod(
        Invocation.method(
          #getSources,
          [],
        ),
        returnValue:
            _i6.Future<List<_i3.SourceModel>>.value(<_i3.SourceModel>[]),
      ) as _i6.Future<List<_i3.SourceModel>>);

  @override
  _i6.Future<List<_i4.RecipeModel>> getRecipes() => (super.noSuchMethod(
        Invocation.method(
          #getRecipes,
          [],
        ),
        returnValue:
            _i6.Future<List<_i4.RecipeModel>>.value(<_i4.RecipeModel>[]),
      ) as _i6.Future<List<_i4.RecipeModel>>);

  @override
  _i6.Future<List<_i7.PresetModel>> getPresets() => (super.noSuchMethod(
        Invocation.method(
          #getPresets,
          [],
        ),
        returnValue:
            _i6.Future<List<_i7.PresetModel>>.value(<_i7.PresetModel>[]),
      ) as _i6.Future<List<_i7.PresetModel>>);

  @override
  _i6.Future<_i3.SourceModel> getSourceById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getSourceById,
          [id],
        ),
        returnValue: _i6.Future<_i3.SourceModel>.value(_FakeSourceModel_1(
          this,
          Invocation.method(
            #getSourceById,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.SourceModel>);

  @override
  _i6.Future<_i4.RecipeModel> getRecipeById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getRecipeById,
          [id],
        ),
        returnValue: _i6.Future<_i4.RecipeModel>.value(_FakeRecipeModel_2(
          this,
          Invocation.method(
            #getRecipeById,
            [id],
          ),
        )),
      ) as _i6.Future<_i4.RecipeModel>);
}
